swagger: '2.0'

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: 'v1'
  title: Project Tracker
  description: "Backend for a simple CRUD example application to track different projects"

host: localhost:5000
basePath: /project-tracker
################################################################################
#                                           Paths                              #
################################################################################
paths:
  /projects:
    get:
      summary: List all projects
      produces: 
        - application/json
      responses:
        200:
          description: Aa array of all projects
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
    post:
      summary: Create a new project
      consumes: 
        - application/json
      produces: 
        - application/json
      parameters:
        - in: body
          name: project
          description: The project you want to create
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        201:
          description: The project has been successfully created.
          schema:
            $ref: '#/definitions/Message'
    put:
      summary: You shouldn't put the entire List
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: project
          description: The project you want to update
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        404:
          description: You can't update the whole List
          schema:
            $ref: '#/definitions/Message'
    patch:
      summary: You shouldn't put the entire List
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: project
          description: The project you want to update
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        404:
          description: You can't update the whole List
          schema:
            $ref: '#/definitions/Message'
    delete:
      summary: You shouldn't delete the entire List
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: project
          description: The project you want to delete
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        404:
          description: You can't delete the whole List
          schema:
            $ref: '#/definitions/Message'

  /projects/{id}:
    get:
      summary: get specific project by id
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Project id
          required: true
      responses:
        200:
          description: the project with the id
          schema:
            $ref: '#/definitions/Project'
        404:
          description: no project with this id existing
          schema:
            $ref: '#/definitions/Message'
    put:
      summary: update an existing project
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: number
          description: The project id
          required: true
        - in: body
          name: project
          description: the project you want to update
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        200:
          description: The project has been successfully updated.
          schema:
            $ref: '#/definitions/Message'
        404:
          description: no project with this id existing
          schema:
            $ref: '#/definitions/Message'
    post:
      summary: update an existing project
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: number
          description: The project id
          required: true
        - in: body
          name: project
          description: the project you want to update
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        200:
          description: The project has been successfully updated.
          schema:
            $ref: '#/definitions/Message'
        404:
          description: no project with this id existing
          schema:
            $ref: '#/definitions/Message'
        409:
          description: conflicting with other prject with same name
          schema:
            $ref: '#/definitions/Message'
    delete:
      summary: Delete a project
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: number
          description: The project id you want to delete.
          required: true
      responses:
        200:
          description: The project has been deleted.
          schema:
            $ref: '#/definitions/Message'
        404:
          description: no project with this id existing
          schema:
            $ref: '#/definitions/Message'

  /projects/{id}/comments:
    get:
      summary: List all comments on this project
      produces: 
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Project id
          required: true
      responses:
        200:
          description: Aa array of all projects
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
    post:
      summary: Create a new comment
      consumes: 
        - application/json
      produces: 
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Project id
          required: true
        - in: body
          name: project
          description: The comment you want to create
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        201:
          description: The comment has been successfully created.
          schema:
            $ref: '#/definitions/Message'
    put:
      summary: You can't put the entire List
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Project id
          required: true
        - in: body
          name: project
          description: The comment you want to update
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        404:
          description: You can't update the whole List
          schema:
            $ref: '#/definitions/Message'
    patch:
      summary: You can't put the entire List
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Project id
          required: true
        - in: body
          name: project
          description: The comment you want to update
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        404:
          description: You can't update the whole List
          schema:
            $ref: '#/definitions/Message'
    delete:
      summary: You can't delete the entire List
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Project id
          required: true
        - in: body
          name: project
          description: The comment you want to delete
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        404:
          description: You can't delete the whole List
          schema:
            $ref: '#/definitions/Message'
  /projects/{id}/contacts:
    get:
      summary: List all contacts associated with this project
      produces: 
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Project id
          required: true
      responses:
        200:
          description: An array of all contacts for this project
          schema:
            type: array
            items:
              $ref: '#/definitions/Contact'
    post:
      summary: Add a new contact
      consumes: 
        - application/json
      produces: 
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Project id
          required: true
        - in: body
          name: project
          description: The comment you want to create
          required: true
          schema:
            $ref: '#/definitions/Contact'
      responses:
        201:
          description: The comment has been successfully created.
          schema:
            $ref: '#/definitions/Message'
    put:
      summary: You can't put the entire List
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Project id
          required: true
        - in: body
          name: project
          description: The contact you want to update
          required: true
          schema:
            $ref: '#/definitions/Contact'
      responses:
        404:
          description: You can't update the whole List
          schema:
            $ref: '#/definitions/Message'
    patch:
      summary: You can't put the entire List
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Project id
          required: true
        - in: body
          name: project
          description: The contact you want to update
          required: true
          schema:
            $ref: '#/definitions/Contact'
      responses:
        404:
          description: You can't update the whole List
          schema:
            $ref: '#/definitions/Message'
    delete:
      summary: You can't delete the entire List
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          description: Project id
          required: true
        - in: body
          name: project
          description: The contact you want to delete
          required: true
          schema:
            $ref: '#/definitions/Contact'
      responses:
        404:
          description: You can't delete the whole List
          schema:
            $ref: '#/definitions/Message'


################################################################################
#                                     Definitions                              #
################################################################################

definitions:

  Project:
    type: object
    description: core object, the projects to track
    properties:
      id:
        type: integer
        format: int64
        description: internal id of project, gets created by system
      parent:
        type: integer
        format: int64
        description: id of parent project so projects can be organized
      name:
        type: string
      customer:
        type: integer
        format: int64
        description: id of customer this project is done for
      startdate:
        type: string
        format: date-time
        description: start date of project
      enddate:
        type: string
        format: date-time
        description: end date of project
      type:
        type: string
        description: type of this project
        default: Kundenprojekt
        enum:
        - Kundenprojekt
        - internes Projekt
        - untergeordnet
        - offen
      kind:
        # should be refactored to what actions are planned
        type: string
        description: kind of project
        default: Beratung
        enum:
        - Beratung
        - SBF
        - RA / RRD
        - SBF / RA / RRD
        - Sonstiges
  Message:
    type: object
    description: general message from backend to the frontend or client
    properties:
      message:
        type: string
        description: A response message from the app.
  Customer:
    type: object
    description: customer of this project
    properties:
      id:
        type: integer
        format: int64
        description: internal id of customer, gets created by system
      name:
        type: string
        description: name of the customer
  Contact:
    type: object
    description: contact for this project or customer
    properties:
      id:
        type: integer
        format: int64
        description: internal id of contact, gets created by system
      name:
        type: string
        description: name of contact
      mail:
        type: string
        description: mail adress of contact
      role:
        type: string
        description: role of this contact
  Status:
    type: object
    description: status of project. There can be different owners of statuses - customer, internal etc.
    properties:
      id:
        type: integer
        format: int64
        description: internal id of status, gets created by system
      owner:
        type: string 
        description: owner of status to differentiate between status by customer and internal status 
      code:
        type: integer
        format: int64
        description: status code, normally a number between 01 and 99, should be formatted as 00
      status:
        type: string
        description: name of status, for example "planned", "staffed", "finished"
  Comment:
    type: object
    description: comment to a project
    properties:
      id:
        type: integer
        format: int64
        description: internal id of comment, gets created by system
      project:
        type: integer
        format: int64
        description: id of project this comment is about
      comment:
        type: string
        description: actual comment
      timestamp:
        type: string
        format: date-time
        description: timestamp of this comment
      user:
        type: integer
        format: int64
        description: id of the user this comment came from
  Resource:
    type: object
    description: resources are members of the project who get things done
    properties:
      id:
        type: integer
        format: int64
        description: internal id of the ressource, is created by system
      abbr:
        type: string
        description: short abbrevation of the name, can be set manually or is created by system
      firstname:
        type: string
        description: first name
      surname:
        type: string
        description: last name
      mail:
        type: string
        description: mail adress